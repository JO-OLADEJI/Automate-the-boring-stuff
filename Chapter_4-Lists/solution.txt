1. What is []?
- The syntax for creating a list of items

2. How would you assign the value 'hello' as the third value in a list stored in a variable named spam? (Assume spam contains [2, 4, 6, 8, 10].)
- spam[2] = 'hello'

>> For the following three questions, let’s say spam contains the list ['a', 'b', 'c', 'd'].

3. What does spam[int('3' * 2) / 11] evaluate to?
- 'd'

4. What does spam[-1] evaluate to?
- 'd'

5. What does spam[:2] evaluate to?
- ['a', 'b']

>> For the following three questions, let’s say bacon contains the list [3.14, 'cat', 11, 'cat', True].

6. What does bacon.index('cat') evaluate to?
- 1

7. What does bacon.append(99) make the list value in bacon look like?
- [3.14, 'cat', 11, 'cat', True, 99]

8. What does bacon.remove('cat') make the list value in bacon look like?
- [3.14, 11, 'cat', True]

9. What are the operators for list concatenation and list replication?
- (+) for list concatination
- (*) for list replication

10. What is the difference between the append() and insert() list methods?
- append() adds an item to the end of the list
- insert() adds an item to a specified index in the list

11. What are two ways to remove values from a list?
- del list_value[index]
- list_value.remove(item)

12. Name a few ways that list values are similar to string values.
- characters can be gotten from them by indexing
- they can be sliced
- they can be concatenated
- they can be replicated

13. What is the difference between lists and tuples?
- List is a mutable data type while tuples aren't
- List is a reference type while tuple is a value type

14. How do you type the tuple value that has just the integer value 42 in it?
- (42, )

15. How can you get the tuple form of a list value? How can you get the list form of a tuple value?
- tuple(list_value)
- list(tuple_value)

16. Variables that “contain” list values don’t actually contain lists directly. What do they contain instead?
- They contain an address or a pointer to the memory location where the list value is stored

17. What is the difference between copy.copy() and copy.deepcopy()?
- copy.copy() copies a list value.... that doesn't contain other list values
- copy.deepcopy() copies a list value that contains other list values as items